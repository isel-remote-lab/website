# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files and install dependencies
COPY ./website/package.json ./
COPY ./website/package-lock.json ./
RUN npm install

# Copy source files
COPY ./website .

# Copy domain config
COPY ../api/host/src/main/resources/domain-config.json ./domain-config.json

# Declare build arguments
ARG NEXTAUTH_URL
ARG NEXT_PUBLIC_NEXTAUTH_URL
ARG AUTH_SECRET
ARG AUTH_MICROSOFT_ENTRA_ID_ID
ARG AUTH_MICROSOFT_ENTRA_ID_SECRET
ARG API_KEY

# Define environment variables for the build
ENV NEXTAUTH_URL=$NEXTAUTH_URL \
    NEXT_PUBLIC_NEXTAUTH_URL=$NEXT_PUBLIC_NEXTAUTH_URL \
    AUTH_SECRET=$AUTH_SECRET \
    AUTH_MICROSOFT_ENTRA_ID_ID=$AUTH_MICROSOFT_ENTRA_ID_ID \
    AUTH_MICROSOFT_ENTRA_ID_SECRET=$AUTH_MICROSOFT_ENTRA_ID_SECRET \
    API_KEY=$API_KEY \
    NODE_ENV=production \
    DOMAIN_CONFIG_PATH=../../domain-config.json

# Build the application
RUN npx next build

# Production stage
FROM node:20-alpine AS runner

WORKDIR /app

# Copy built assets from builder
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/domain-config.json ./domain-config.json

# Install production dependencies only
RUN npm install --omit=dev

EXPOSE 3000

CMD ["npm", "run", "start"] 